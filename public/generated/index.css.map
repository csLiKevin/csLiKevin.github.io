{
  "version": 3,
  "file": "index.css",
  "sources": [
    "..\\..\\Basics.svelte",
    "..\\..\\DateRange.svelte"
  ],
  "sourcesContent": [
    "<script>\n    // propTypes = {\n    //     label: PropTypes.string,\n    //     location: PropTypes.shape({\n    //         city: PropTypes.string,\n    //         countryCode: PropTypes.string,\n    //         region: PropTypes.string\n    //     }),\n    //     name: PropTypes.string,\n    //     profiles: PropTypes.arrayOf(\n    //         PropTypes.shape({\n    //             network: PropTypes.string,\n    //             username: PropTypes.string,\n    //             url: PropTypes.string\n    //         })\n    //     ),\n    //     website: PropTypes.string\n    // };\n    export let label;\n    export let location;\n    export let name;\n    export let profiles;\n    export let website;\n\n    const { city, countryCode, region } = location;\n\n    function getNetworkIconClasses(network) {\n        switch (network.toLowerCase()) {\n            case \"github\":\n                return \"fab fa-github-square\";\n            case \"linkedin\":\n                return \"fab fa-linkedin\";\n            default:\n                return \"far fa-comment-alt\";\n        }\n    }\n</script>\n\n<style>\n    .is-marginless-bottom {\n        margin-bottom: 0 !important;\n    }\n</style>\n\n<section class=\"hero is-fullheight is-primary\">\n    <div class=\"hero-body\">\n        <div class=\"container\">\n            <h1 class=\"is-size-1 title\">{name}</h1>\n            <h2 class=\"is-marginless-bottom is-size-4 subtitle\">{label}</h2>\n            <div>{`${city}, ${region}, ${countryCode}`}</div>\n            <a href={website}>{website}</a>\n            <div>\n                {#each profiles as { network, url }}\n                    <a\n                        class=\"icon is-medium\"\n                        href={url}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\">\n                        <i class={`${getNetworkIconClasses(network)} fa-lg`} />\n                    </a>\n                {/each}\n            </div>\n        </div>\n    </div>\n</section>\n",
    "<script>\n    // propTypes = {\n    //     startDate: PropTypes.string,\n    //     endDate: PropTypes.string\n    // };\n    export let startDate;\n    export let endDate;\n\n    const startYear = parseInt(startDate);\n    const endYear = parseInt(endDate) || \"\";\n    const colorClass = endYear ? \"has-text-grey-light\" : \"has-text-success\";\n</script>\n\n<style>\n    .is-daterange {\n        margin-bottom: 0.2rem;\n        margin-left: 0.2rem;\n        margin-right: 0.2rem;\n    }\n</style>\n\n<div class={`is-daterange has-text-weight-bold is-size-5 ${colorClass}`}>\n    {`${startYear} - ${endYear}`}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAuCI,qBAAqB,eAAC,CAAC,AACnB,aAAa,CAAE,CAAC,CAAC,UAAU,AAC/B,CAAC;AC3BD,aAAa,eAAC,CAAC,AACX,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,MAAM,AACxB,CAAC"
}