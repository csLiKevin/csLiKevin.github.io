{
  "version": 3,
  "file": "index.css",
  "sources": [
    "..\\..\\src\\Basics.svelte",
    "..\\..\\src\\DateRange.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    // propTypes = {\r\n    //     label: PropTypes.string,\r\n    //     location: PropTypes.shape({\r\n    //         city: PropTypes.string,\r\n    //         countryCode: PropTypes.string,\r\n    //         region: PropTypes.string\r\n    //     }),\r\n    //     name: PropTypes.string,\r\n    //     profiles: PropTypes.arrayOf(\r\n    //         PropTypes.shape({\r\n    //             network: PropTypes.string,\r\n    //             username: PropTypes.string,\r\n    //             url: PropTypes.string\r\n    //         })\r\n    //     ),\r\n    //     website: PropTypes.string\r\n    // };\r\n    export let label;\r\n    export let location;\r\n    export let name;\r\n    export let profiles;\r\n    export let website;\r\n\r\n    const { city, countryCode, region } = location;\r\n\r\n    function getNetworkIconClasses(network) {\r\n        switch (network.toLowerCase()) {\r\n            case \"github\":\r\n                return \"fab fa-github-square\";\r\n            case \"linkedin\":\r\n                return \"fab fa-linkedin\";\r\n            default:\r\n                return \"far fa-comment-alt\";\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .is-marginless-bottom {\r\n        margin-bottom: 0 !important;\r\n    }\r\n</style>\r\n\r\n<section class=\"hero is-fullheight is-primary\">\r\n    <div class=\"hero-body\">\r\n        <div class=\"container\">\r\n            <h1 class=\"is-size-1 title\">{name}</h1>\r\n            <h2 class=\"is-marginless-bottom is-size-4 subtitle\">{label}</h2>\r\n            <div>{`${city}, ${region}, ${countryCode}`}</div>\r\n            <a href={website}>{website}</a>\r\n            <div>\r\n                {#each profiles as { network, url }}\r\n                    <a\r\n                        class=\"icon is-medium\"\r\n                        href={url}\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\">\r\n                        <i class={`${getNetworkIconClasses(network)} fa-lg`} />\r\n                    </a>\r\n                {/each}\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n",
    "<script>\r\n    // propTypes = {\r\n    //     startDate: PropTypes.string,\r\n    //     endDate: PropTypes.string\r\n    // };\r\n    export let startDate;\r\n    export let endDate;\r\n\r\n    const startYear = parseInt(startDate);\r\n    const endYear = parseInt(endDate) || \"\";\r\n    const colorClass = endYear ? \"has-text-grey-light\" : \"has-text-success\";\r\n</script>\r\n\r\n<style>\r\n    .is-daterange {\r\n        margin-bottom: 0.2rem;\r\n        margin-left: 0.2rem;\r\n        margin-right: 0.2rem;\r\n    }\r\n</style>\r\n\r\n<div class={`is-daterange has-text-weight-bold is-size-5 ${colorClass}`}>\r\n    {`${startYear} - ${endYear}`}\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AAuCI,qBAAqB,cAAC,CAAC,AACnB,aAAa,CAAE,CAAC,CAAC,UAAU,AAC/B,CAAC;AC3BD,aAAa,cAAC,CAAC,AACX,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,MAAM,CACnB,YAAY,CAAE,MAAM,AACxB,CAAC"
}