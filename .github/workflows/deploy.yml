name: deploy

on:
    push:
        branches:
            - master

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Allow one concurrent deployment
concurrency:
    group: "pages"
    cancel-in-progress: true

defaults:
    run:
        shell: bash

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v3

            - name: Detect package manager
              id: detect-package-manager
              run: |
                  if [ -f "${{ github.workspace }}/yarn.lock" ]; then
                      echo "::set-output name=manager::yarn"
                      echo "::set-output name=command::install"
                      echo "::set-output name=runner::yarn"
                      exit 0
                  elif [ -f "${{ github.workspace }}/package.json" ]; then
                      echo "::set-output name=manager::npm"
                      echo "::set-output name=command::ci"
                      echo "::set-output name=runner::npx --no-install"
                      exit 0
                  else
                      echo "Unable to determine packager manager"
                      exit 1
                  fi

            - name: Setup Node
              uses: actions/setup-node@v3
              with:
                  node-version: "16"
                  cache: ${{ steps.detect-package-manager.outputs.manager }}

            - name: Restore cache
              uses: actions/cache@v3
              with:
                  path: |
                      dist
                      .vercel
                  key: ${{ runner.os }}-vercel-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.astro', '**.[jt]s', '**.[jt]sx') }}
                  restore-keys: |
                      ${{ runner.os }}-vercel-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

            - name: Install dependencies
              run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

            - name: Static HTML export with Vercel
              run: ${{ steps.detect-package-manager.outputs.manager }} run build

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v1
              with:
                  path: ./dist

    deploy:
        # Add a dependency to the build job
        needs: build

        # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
        permissions:
            pages: write # to deploy to Pages
            id-token: write # to verify the deployment originates from an appropriate source

        # Deploy to the github-pages environment
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}

        runs-on: ubuntu-latest

        steps:
            - name: Deploy GitHub Pages site
              id: deployment
              uses: actions/deploy-pages@v1.2.0
